[tool.poetry]
name = "project template"
version = "0.1.0"
description = ""
authors = ["Name Surname <name.surname@logex.com>"]
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.4.2"  # dataclasses with type hints and validations

[tool.poetry.group.quality_checks.dependencies]
# Flake8 + extensions: code analyses
flake8 = "^6.1.0"
flake8-colors = "^0.1.9"
flake8-raise = "^0.0.5"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^23.9.16"
flake8-comprehensions = "^3.14.0"
flake8-docstrings = "^1.7.0"
flake8-implicit-str-concat = "^0.4.0"
flake8-rst = "^0.8.0"
flake8-string-format = "^0.3.0"
flake8-logging-format = "^0.9.0"
# Other
black = "^22.9.1"  # code formatting
isort = "^5.12.0"  # code formatting: sort imports
mypy = "^1.5.1"  # code analyses: check types hints
pre-commit = "^3.4.0"  # perform code checks before the commit
types-requests = "^2.31.0"  # code analyses: typse hints for requests

[tool.poetry.group.unit_tests.dependencies]
# Pytest: unit tests
pytest = "^7.4.2"  # main pytest package
pytest-asyncio = "^0.21.1"  # pytests for async functions. Remove if you don't use asyncio
pytest-cov = "^4.1.0"  # pytest coverage
pytest-mock = "^3.11.1"  # pytest wrapper for mocking(patching) modules

[tool.isort]
profile = "black"
line_length = 120
src_paths = ["./"]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | venv
  | env
  | _build
  | build
  | dist
)/
'''

[tool.mypy]
exclude = [".venv","venv", "env", ".env"]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true

[tool.coverage.report]
fail_under = 85
exclude_also= [
    "def main",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
title = "Coverage report"

[tool.coverage.run]
source = ["src"]
omit = [
    # exclude from coverage report
    "*/settings/*",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
asyncio_mode = "strict"
addopts = "--strict-markers --cov=src/ --cov-report term:skip-covered --cov-report html:htmlcov"
